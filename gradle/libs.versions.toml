[versions]
agp = "8.9.2"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-activityCompose = "1.10.1"
androidx-lifecycle = "2.8.4"
colormath = "3.6.1"
compose-plugin = "1.7.3"
hazeVersion = "1.6.0-beta03-pixelmonaskarion"
kotlin = "2.1.20"
coroutines = "1.10.1"
kotlinxDatetime = "0.6.2"
kotlinxSerializationJson = "1.8.0"
ksoup = "0.2.3"
kvault = "1.12.0"
materialKolor = "3.0.0-alpha01"
mordant = "3.0.2"
mp_stools = "1.5.1"
napier = "2.7.1"
navigationCompose = "2.7.0-alpha07"
coilComposeVersion = "3.1.0"
permissionsCompose = "0.18.0"
workRuntimeKtx = "2.10.1"
ktor = "3.1.2"
datastore = "1.1.3"

[libraries]
androidx-datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntimeKtx" }
colormath = { module = "com.github.ajalt.colormath:colormath", version.ref = "colormath" }
haze = { module = "dev.chrisbanes.haze:haze", version.ref = "hazeVersion" }
haze-materials = { module = "dev.chrisbanes.haze:haze-materials", version.ref = "hazeVersion" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
ksoup = { module = "com.fleeksoft.ksoup:ksoup", version.ref = "ksoup" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
kvault = { module = "com.liftric:kvault", version.ref = "kvault" }
material-kolor = { module = "com.materialkolor:material-kolor", version.ref = "materialKolor" }
mordant = { module = "com.github.ajalt.mordant:mordant", version.ref = "mordant" }
mp_stools = { module = "net.sergeych:mp_stools", version.ref = "mp_stools" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
coil3-coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coilComposeVersion" }
permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "permissionsCompose" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coil-network-ktor3 = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coilComposeVersion" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }